import javax.swing.*;
import java.awt.*;
import java.sql.*;

public class StudentRegistrationForm extends JFrame {
    JTextField nameField, ageField, emailField;
    JButton submitButton, clearButton;
    static final String URL = "jdbc:postgresql://localhost:5432/postgres";
    static final String USER = "postgres";
    static final String PASSWORD = "midhun";

    public StudentRegistrationForm() {
        setTitle("Student Registration Form");
        setSize(400, 250);
        setDefaultCloseOperation(EXIT_ON_CLOSE);
        setLayout(new GridLayout(5, 2, 10, 10));

        add(new JLabel("Name:"));
        nameField = new JTextField();
        add(nameField);

        add(new JLabel("Age:"));
        ageField = new JTextField();
        add(ageField);

        add(new JLabel("Email:"));
        emailField = new JTextField();
        add(emailField);

        submitButton = new JButton("Submit");
        clearButton = new JButton("Clear");
        add(submitButton);
        add(clearButton);

        submitButton.addActionListener(e -> submitData());
        clearButton.addActionListener(e -> clearFields());

        setVisible(true);
        setLocationRelativeTo(null);
    }

    void submitData() {
        String name = nameField.getText().trim();
        String ageText = ageField.getText().trim();
        String email = emailField.getText().trim();

        if (name.isEmpty() || ageText.isEmpty() || email.isEmpty()) {
            JOptionPane.showMessageDialog(this, "All fields are required");
            return;
        }
        try {
            int age = Integer.parseInt(ageText);
            if (age <= 0) throw new NumberFormatException();
            try (Connection conn = DriverManager.getConnection(URL, USER, PASSWORD)) {
                String sql = "INSERT INTO students (name, age, email) VALUES (?, ?, ?)";
                PreparedStatement stmt = conn.prepareStatement(sql);
                stmt.setString(1, name);
                stmt.setInt(2, age);
                stmt.setString(3, email);
                stmt.executeUpdate();
                JOptionPane.showMessageDialog(this, "Student Registered Successfully");
                clearFields();
            }
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(this, "Invalid age");
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Database Error: " + ex.getMessage());
        }
    }

    void clearFields() {
        nameField.setText("");
        ageField.setText("");
        emailField.setText("");
    }

    public static void main(String[] args) {
        SwingUtilities.invokeLater(() -> new StudentRegistrationForm());
    }
}
